name: Deploy Ombrello Frontend

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p "${{ secrets.DOCKER_PASSWORD }}"
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ombrello-frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/ombrello-frontend:latest

      - name: Deploy Docker Image to EC2
        env:
          EC2_HOST: 3.106.124.101
          EC2_USER: ubuntu
          EC2_KEY: ${{ secrets.EC2_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # Save the private key to a temporary file and set permissions
          echo "$EC2_KEY" > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

          # SSH into the EC2 instance and deploy the Docker container
          ssh -o StrictHostKeyChecking=no -i /tmp/ec2_key.pem $EC2_USER@$EC2_HOST << EOF
            set -e
            
            # Debugging: Echo the image name to see if it's correct
            echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"
            echo "Image name: ${{ secrets.DOCKER_USERNAME }}/ombrello-frontend:latest"
            
            # Pull the latest Docker image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/ombrello-frontend:latest
            
            # Stop and remove any existing container with the same name
            docker stop ombrello-frontend || true
            docker rm ombrello-frontend || true
            # Remove untagged Docker images
            docker image prune -f
            
            # Run the new container
            docker run -d  -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/ombrello-frontend:latest
          EOF

          # Clean up the temporary private key file
          rm -f /tmp/ec2_key.pem
